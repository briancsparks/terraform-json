#!/bin/bash -e

readlink_f() { which greadlink > /dev/null && greadlink -f $1 || readlink -f $1; }
script_dir="$( cd "$(dirname "$( readlink_f "${BASH_SOURCE[0]}" )" )" && pwd )"

errcho() { echo "$@" 1>&2; }
die() { errcho "$@"; exit 1; }






IFACE="ens5"
IFACE_MAC=$(cat /sys/class/net/${IFACE}/address)
VPC_CIDR_URI="http://169.254.169.254/latest/meta-data/network/interfaces/macs/${IFACE_MAC}/vpc-ipv4-cidr-block"
VPC_CIDR_RANGE=$(curl --retry 3 --silent --fail "${VPC_CIDR_URI}")

# -----------------------------------------------------------------------------
# Wait for cloud-init to finish
for ((i=0;i<120;i+=1)); do
  if grep -E 'Cloud-init.*finished.*Up.*seconds$' /var/log/cloud-init-output.log; then
    break
  fi

  echo "Waiting for cloud-init to finish. ($(cat /var/log/cloud-init-output.log | wc -l))"
  tail -10 /var/log/cloud-init-output.log
  sleep 1
done

# -----------------------------------------------------------------------------
# NAT
#sudo sysctl -q -w net.ipv4.ip_forward=1 net.ipv4.conf.${IFACE}.send_redirects=0 net.ipv4.conf.${IFACE}.forwarding=1
sudo sysctl -q -w net.ipv4.ip_forward=1 net.ipv4.conf.${IFACE}.forwarding=1
sudo iptables -A FORWARD -o ${IFACE} -j ACCEPT
sudo iptables -A FORWARD -i ${IFACE} -m state --state RELATED,ESTABLISHED -j ACCEPT
#sudo iptables -t nat -A POSTROUTING -o "${IFACE}" -s "${VPC_CIDR_RANGE}" -j MASQUERADE
sudo iptables -t nat -A POSTROUTING -o "${IFACE}" -j MASQUERADE

## Show it worked
#touch /home/ubuntu/provision.log
#sudo sysctl net.ipv4.ip_forward net.ipv4.conf.${IFACE}.send_redirects net.ipv4.conf.${IFACE}.forwarding >> /home/ubuntu/provision.log
#sudo iptables -n -t nat -L POSTROUTING >> /home/ubuntu/provision.log

# -----------------------------------------------------------------------------
# Do not prompt when installing iptables-persistent
echo iptables-persistent iptables-persistent/autosave_v4 boolean true | sudo debconf-set-selections
echo iptables-persistent iptables-persistent/autosave_v6 boolean true | sudo debconf-set-selections

sudo apt-get install -y iptables-persistent netfilter-persistent

## Note, to see that the ...autosave_vX worked:
#sudo apt install debconf-utils
#sudo debconf-get-selections | grep iptables

# -----------------------------------------------------------------------------
# Create a file that will save iptables.
cat << EOF >> /home/ubuntu/bin/save-iptables
#!/bin/bash -e

# Run this script if you change the iptables rules, so that the rules survive a reboot.
sudo iptables-save  | sudo tee /etc/iptables/rules.v4
sudo ip6tables-save | sudo tee /etc/iptables/rules.v6
EOF
chmod +x /home/ubuntu/bin/save-iptables


# -----------------------------------------------------------------------------
# A script that will fix: "sudo: unable to resolve host ip-W-X-Y-Z"
cat << EOF >> /home/ubuntu/bin/fix-unable-to-resolve-host
echo "127.0.0.1 $(cat /etc/hostname)" | sudo tee -a /etc/hosts
EOF
chmod +x /home/ubuntu/bin/fix-unable-to-resolve-host


